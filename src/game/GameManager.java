package game;

import javax.swing.*;
import java.awt.*;

/**
 * 界面控制器，控制向哪个关卡切换
 * @author DengYuhan
 * @date 2020/3/28
 */
public class GameManager extends JFrame  {
 
   private JPanel panel;
   public GameManager frame;
	/**关卡通过还是失败*/
   public boolean win;
	/**记录每个关卡的得分*/
	public int[] scores = {-1, -1, -1};
   /**关卡地图（只包含墙和豆子）*/
   public int[][][] kinds = {{{0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0},
		  {0,4,4,0,4,4,0,4,0,4,4,0,4,0,4,4,0,4,4,0},
		  {0,4,4,0,4,4,0,4,0,4,4,0,4,0,4,4,0,4,4,0},
		  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		  {0,4,4,4,0,0,0,4,4,4,4,4,4,0,0,0,4,4,4,0},
		  {0,0,0,0,0,4,0,0,0,4,4,0,0,0,4,0,0,0,0,0},
		  {4,4,4,4,0,4,0,0,0,4,4,0,0,0,4,0,4,4,4,4},
		  {0,0,0,4,0,4,4,4,0,0,0,0,4,4,4,0,4,0,0,0},
		  {0,4,4,4,0,4,0,0,0,0,0,0,0,0,4,0,4,4,4,0},
		  {0,0,0,0,0,4,0,4,4,0,0,4,4,0,4,0,0,0,0,0},
		  {0,4,4,4,0,0,0,4,0,0,0,0,4,0,0,0,4,4,4,0},
		  {0,0,0,4,0,0,0,4,4,4,4,4,4,0,0,0,4,0,0,0},
		  {4,4,4,4,0,4,0,0,0,0,0,0,0,0,4,0,4,4,4,4},
		  {0,0,0,0,0,4,0,4,4,4,4,4,4,0,4,0,0,0,0,0},
		  {0,4,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,4,4,0},
		  {0,4,4,4,0,0,0,4,4,4,4,4,4,0,0,0,4,4,4,0},
		  {0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0},
		  {0,0,4,4,4,4,0,0,0,4,4,0,0,0,4,4,4,4,0,0},
		  {4,0,0,0,4,4,0,0,4,4,4,4,0,0,4,4,4,0,0,4},
		  {4,4,0,0,0,0,0,4,4,4,4,4,4,0,0,0,0,0,4,4}},
		   
		   {{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0},
				{4,0,0,4,4,4,4,0,0,4,4,4,4,0,0,4,0,4,4,0},
				{4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,0},
				{4,4,4,4,0,0,4,4,4,4,0,0,4,4,0,4,0,4,4,4},
				{4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0},
				{4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,0,4,0,0},
				{4,0,0,0,4,0,4,4,0,0,0,0,4,0,0,0,0,4,0,4},
				{4,0,4,0,4,0,4,4,0,4,4,0,4,0,4,4,0,4,0,0},
				{4,0,4,0,4,0,4,4,0,4,4,0,4,0,4,4,0,4,4,0},
				{4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0},
				{4,0,4,0,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,4},
				{4,0,4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0},
				{4,0,0,0,4,0,4,4,0,4,4,0,4,0,4,0,0,4,4,0},
				{4,4,4,4,4,0,4,4,0,4,4,0,4,0,4,4,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,0,4,4,4},
				{0,4,4,4,4,4,4,4,4,4,4,4,4,0,4,0,4,4,4,4},
				{0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,0,0,0},
				{0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,4,4,4,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
		   
		   {{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
	    			  {4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4},
	    			  {4,4,0,0,4,4,4,4,0,4,4,0,4,4,4,4,0,0,0,0},
	    			  {4,4,4,0,4,4,4,4,0,4,4,0,4,4,4,4,0,4,4,4},
	    			  {4,4,4,0,0,0,4,4,0,4,4,0,0,0,0,0,0,0,0,0},
	    			  {4,0,0,0,0,0,4,4,0,4,4,0,4,4,4,4,4,4,4,0},
	    			  {4,4,4,4,0,0,4,4,0,4,4,0,4,0,0,0,4,0,0,0},
	    			  {4,4,4,4,0,0,0,0,0,0,0,0,4,0,4,0,0,0,4,0},
	    			  {0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
	    			  {4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4},
	    			  {4,4,4,4,0,4,4,0,0,0,0,0,0,0,0,4,4,0,4,4},
	    			  {0,0,4,0,0,4,4,0,0,0,0,0,0,0,0,4,4,0,4,4},
	    			  {4,0,4,0,0,4,4,4,4,4,4,4,4,4,0,4,4,0,0,4},
	    			  {0,0,4,0,0,4,4,4,4,4,4,4,4,4,0,4,4,0,4,4},
	    			  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4},
	    			  {4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0},
	    			  {4,4,4,0,0,0,4,4,4,0,0,4,4,4,0,0,0,4,4,0},
	    			  {0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0},
	    			  {4,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,4},
	    			  {4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4}}
		   };
   
   public GameManager(int levelNum, boolean win,int[] scores) {
      super("Pac man");
      this.scores = scores;
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      this.win = win;
	   //关卡1
      if(levelNum == LevelPanel.LEVELONE) {
    	  getContentPane().add(getPanel(1), BorderLayout.CENTER);
      }
	  //关卡2
      else if(levelNum == LevelPanel.LEVELTWO) {
    	  getContentPane().add(getPanel(2), BorderLayout.CENTER);
      }
	  //关卡3
      else if(levelNum == LevelPanel.LEVELTHREE) {
    	  getContentPane().add(getPanel(3), BorderLayout.CENTER);
      }
	  //失败
      else if(levelNum == LevelPanel.LEVELLOSE) {
    	  getContentPane().add(getPanel(0), BorderLayout.CENTER);
      }
	  //通关
      else if(levelNum == LevelPanel.LEVELPASS) {
    	  getContentPane().add(getPanel(100), BorderLayout.CENTER);
      }
      setVisible(true);
      setSize(435,465);
      setLocationRelativeTo(null);
   }

   /**界面*/
	protected JPanel getPanel(int level) {
      if (panel == null) {
		  //通过关卡
    	  if(win) {
			  //通关
    		  if(level == LevelPanel.LEVELPASS) {
    			  panel = new WinPanel(scores);
    		  }
    		  else {
		    	  if(level == LevelPanel.LEVELONE) {
			    	  int[][] kind = kinds[0];
			    	  panel = new LevelPanel(this, kind, 1, scores);
		    	  }
		    	  else if(level == LevelPanel.LEVELTWO) {
			    	  int[][] kind = kinds[1];
			    	  panel = new LevelPanel(this, kind, 2, scores);
		    	  }
		    	  else if(level == LevelPanel.LEVELTHREE) {
			    	  int[][] kind = kinds[2];
			    	  panel = new LevelPanel(this, kind, 3, scores);
		    	  }
		          this.addKeyListener((LevelPanel)panel);
    		  }
    	  }
		  //未通过关卡
    	  else {
    		  panel = new LosePanel(this, level, scores);
    		  panel.addMouseListener((LosePanel)panel);
	          panel.addMouseMotionListener((LosePanel)panel);
    	  }
      }
      return panel;
   }
   
}

